{
  "openapi": "3.0.1",
  "info": {
    "title": "Pay-i",
    "description": "Pay-i API",
    "version": "v1"
  },
  "paths": {
    "/api/v1/proxy/anthropic/v1/messages": {
      "post": {
        "tags": [
          "Anthropic Requests"
        ],
        "summary": "Messages",
        "operationId": "requests.Anthropic.MessagesAPIV1",
        "parameters": [
          {
            "name": "xProxy-Forward-Authorization",
            "in": "header",
            "description": "API Key or JWT to authorize with the downstream request API.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "xProxy-Budget-IDs",
            "in": "header",
            "description": "Comma separated list of budget ID strings",
            "schema": {
              "type": "string"
            },
            "example": "budgetId1, budgetId_2"
          },
          {
            "name": "xProxy-Request-Tags",
            "in": "header",
            "description": "Comma separated list of request tag strings",
            "schema": {
              "type": "string"
            },
            "example": "requestTag1, request_tag_2"
          },
          {
            "name": "xProxy-User-ID",
            "in": "header",
            "description": "User ID",
            "schema": {
              "type": "string"
            },
            "example": "UserName123"
          },
          {
            "name": "xProxy-Experience-InstanceId",
            "in": "header",
            "description": "Experience Instance ID",
            "schema": {
              "type": "string"
            },
            "example": "experience_instance_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiRouter.AnthropicResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ProxyApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/proxy/azure.openai/openai/deployments/{depoymentName}/chat/completions": {
      "post": {
        "tags": [
          "Azure OpenAI Requests"
        ],
        "summary": "Chat Completions",
        "operationId": "requests.AzureOpenAI.ChatCompletionsAPI",
        "parameters": [
          {
            "name": "depoymentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "xProxy-Forward-Authorization",
            "in": "header",
            "description": "API Key or JWT to authorize with the downstream request API.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "xProxy-Budget-IDs",
            "in": "header",
            "description": "Comma separated list of budget ID strings",
            "schema": {
              "type": "string"
            },
            "example": "budgetId1, budgetId_2"
          },
          {
            "name": "xProxy-Request-Tags",
            "in": "header",
            "description": "Comma separated list of request tag strings",
            "schema": {
              "type": "string"
            },
            "example": "requestTag1, request_tag_2"
          },
          {
            "name": "xProxy-User-ID",
            "in": "header",
            "description": "User ID",
            "schema": {
              "type": "string"
            },
            "example": "UserName123"
          },
          {
            "name": "xProxy-Experience-InstanceId",
            "in": "header",
            "description": "Experience Instance ID",
            "schema": {
              "type": "string"
            },
            "example": "experience_instance_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiRouter.OpenAIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ProxyApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/proxy/azure.openai/openai/deployments/{depoymentName}/embeddings": {
      "post": {
        "tags": [
          "Azure OpenAI Requests"
        ],
        "summary": "Embeddings",
        "operationId": "requests.AzureOpenAI.EmbeddingsAPI",
        "parameters": [
          {
            "name": "depoymentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "xProxy-Forward-Authorization",
            "in": "header",
            "description": "API Key or JWT to authorize with the downstream request API.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "xProxy-Budget-IDs",
            "in": "header",
            "description": "Comma separated list of budget ID strings",
            "schema": {
              "type": "string"
            },
            "example": "budgetId1, budgetId_2"
          },
          {
            "name": "xProxy-Request-Tags",
            "in": "header",
            "description": "Comma separated list of request tag strings",
            "schema": {
              "type": "string"
            },
            "example": "requestTag1, request_tag_2"
          },
          {
            "name": "xProxy-User-ID",
            "in": "header",
            "description": "User ID",
            "schema": {
              "type": "string"
            },
            "example": "UserName123"
          },
          {
            "name": "xProxy-Experience-InstanceId",
            "in": "header",
            "description": "Experience Instance ID",
            "schema": {
              "type": "string"
            },
            "example": "experience_instance_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiRouter.OpenAIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ProxyApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/proxy/azure.openai/openai/deployments/{depoymentName}/images/generations": {
      "post": {
        "tags": [
          "Azure OpenAI Requests"
        ],
        "summary": "Generations",
        "operationId": "requests.AzureOpenAI.ImagesGenerationsAPI",
        "parameters": [
          {
            "name": "depoymentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "xProxy-Forward-Authorization",
            "in": "header",
            "description": "API Key or JWT to authorize with the downstream request API.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "xProxy-Budget-IDs",
            "in": "header",
            "description": "Comma separated list of budget ID strings",
            "schema": {
              "type": "string"
            },
            "example": "budgetId1, budgetId_2"
          },
          {
            "name": "xProxy-Request-Tags",
            "in": "header",
            "description": "Comma separated list of request tag strings",
            "schema": {
              "type": "string"
            },
            "example": "requestTag1, request_tag_2"
          },
          {
            "name": "xProxy-User-ID",
            "in": "header",
            "description": "User ID",
            "schema": {
              "type": "string"
            },
            "example": "UserName123"
          },
          {
            "name": "xProxy-Experience-InstanceId",
            "in": "header",
            "description": "Experience Instance ID",
            "schema": {
              "type": "string"
            },
            "example": "experience_instance_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiRouter.OpenAIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ProxyApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/budgets/{budget_id}/tags": {
      "get": {
        "tags": [
          "Budget Tags"
        ],
        "summary": "Get a Budget's Tags",
        "operationId": "getBudgetTags",
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "Budget Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetTagsResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Budget Tags"
        ],
        "summary": "Add Tags to a Budget",
        "operationId": "addBudgetTags",
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "Budget Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Budget Tags to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetTags"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetTags"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetTagsResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Budget Tags"
        ],
        "summary": "Update the Budget's Tags",
        "operationId": "updateBudgetTags",
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "Budget Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Budget Tags to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetTags"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetTags"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetTagsResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Budget Tags"
        ],
        "summary": "Delete the Budget's Tags",
        "operationId": "deleteBudgetTags",
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "Budget Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetTagsResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/budgets/{budget_id}/tags/remove": {
      "patch": {
        "tags": [
          "Budget Tags"
        ],
        "summary": "Remove Tags from the Budget",
        "operationId": "deleteSelectedBudgetTags",
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "Budget Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Budget Tags to remove",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetTags"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetTags"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetTagsResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/budgets": {
      "get": {
        "tags": [
          "Budgets"
        ],
        "summary": "Get all Budgets",
        "operationId": "getBudgets",
        "parameters": [
          {
            "name": "budget_name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_ascending",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.BudgetManagement.Models.ApiQueries.PagedBudgetList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Budgets"
        ],
        "summary": "Create a Budget",
        "operationId": "createBudget",
        "requestBody": {
          "description": "Budget configuration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.BudgetManagement.Models.CreateBudget"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.BudgetManagement.Models.CreateBudget"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/budgets/{budget_id}": {
      "get": {
        "tags": [
          "Budgets"
        ],
        "summary": "Get a Budget's details",
        "operationId": "getBudget",
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "Budget Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Budgets"
        ],
        "summary": "Update a Budget",
        "operationId": "updateBudget",
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "Budget Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Budget configuration to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.BudgetManagement.Models.UpdateBudget"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.BudgetManagement.Models.UpdateBudget"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Budgets"
        ],
        "summary": "Delete a Budget",
        "operationId": "deleteBudget",
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "Budget Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.BudgetManagement.Models.DefaultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/budgets/{budget_id}/reset": {
      "post": {
        "tags": [
          "Budgets"
        ],
        "summary": "Reset the Budget",
        "operationId": "resetBudget",
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "description": "Budget Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get all Categories",
        "operationId": "getCategories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayI.Calculator.Models.CategoryResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/categories/{category}/resources": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get all Resources for a Category",
        "operationId": "getResourcesList",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "category",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayI.Calculator.Models.CategoryResourceResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/categories/{category}": {
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete a Category and all of its Resources",
        "operationId": "deleteCategoryResources",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "Category",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PayI.Calculator.Models.CategoryResourceResponse"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/categories/{category}/resources/{resource}": {
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete all versions of Resource from a Category",
        "operationId": "deleteCategoryResource",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "Category",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "path",
            "description": "Resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayI.Calculator.Models.CategoryResourceResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Resources"
        ],
        "summary": "Create a Resource",
        "operationId": "createResource",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "Category",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "path",
            "description": "Resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Resource Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.Calculator.Models.CategoryResourceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.Calculator.Models.CategoryResourceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Calculator.Models.CategoryResourceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get a list of versions of a Resource",
        "operationId": "getResources",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "Category",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "path",
            "description": "Resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayI.Calculator.Models.CategoryResourceResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/experiences/types": {
      "get": {
        "tags": [
          "Experiences"
        ],
        "summary": "Get all Experience Types",
        "operationId": "getExperienceTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExperienceTypesResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Experiences"
        ],
        "summary": "Adds a new experience type. Instances of this type can be created via\r\n/experiences/instance.",
        "operationId": "createExperienceType",
        "requestBody": {
          "description": "Experience details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.Calculator.Models.ExperienceTypeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.Calculator.Models.ExperienceTypeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperienceTypesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/experiences/types/{experience_type_id}": {
      "get": {
        "tags": [
          "Experiences"
        ],
        "summary": "Get details for a specific Experience Type",
        "operationId": "getExperienceType",
        "parameters": [
          {
            "name": "experience_type_id",
            "in": "path",
            "description": "Experience type ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperienceTypesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "patch": {
        "tags": [
          "Experiences"
        ],
        "summary": "Updates an existing experience type.",
        "operationId": "updateExperienceType",
        "parameters": [
          {
            "name": "experience_type_id",
            "in": "path",
            "description": "Experience type ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.Calculator.Models.UpdateExperienceTypeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.Calculator.Models.UpdateExperienceTypeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperienceTypesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Experiences"
        ],
        "summary": "Deletes an experience type. This will remove visiblity of this type from all\r\ndashboard stats.",
        "operationId": "deleteExperienceType",
        "parameters": [
          {
            "name": "experience_type_id",
            "in": "path",
            "description": "Experience type ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperienceTypesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/experiences/instances/{experience_instance_id}": {
      "get": {
        "tags": [
          "Experiences"
        ],
        "summary": "Get details for an experience instance.",
        "operationId": "getExperienceInstance",
        "parameters": [
          {
            "name": "experience_instance_id",
            "in": "path",
            "description": "Experience instance ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperienceInstanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Experiences"
        ],
        "summary": "Deletes an experience instance. This will remove all costs associated with this\r\nexperience instance.",
        "operationId": "deleteExperienceInstance",
        "parameters": [
          {
            "name": "experience_instance_id",
            "in": "path",
            "description": "Experience instance ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperienceInstanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/experiences/instances/{experience_type_id}": {
      "post": {
        "tags": [
          "Experiences"
        ],
        "summary": "Creates a new experience instance. This ID can then be passed into router calls\r\nfor a specific user experience.",
        "operationId": "newExperienceInstance",
        "parameters": [
          {
            "name": "experience_type_id",
            "in": "path",
            "description": "Experience type ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperienceInstanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/ingest": {
      "post": {
        "tags": [
          "Ingest Requests"
        ],
        "summary": "Ingest a request",
        "operationId": "requests.Ingest",
        "parameters": [
          {
            "name": "xProxy-Budget-IDs",
            "in": "header",
            "description": "Comma separated list of budget ID strings",
            "schema": {
              "type": "string"
            },
            "example": "budgetId1, budgetId_2"
          },
          {
            "name": "xProxy-Request-Tags",
            "in": "header",
            "description": "Comma separated list of request tag strings",
            "schema": {
              "type": "string"
            },
            "example": "requestTag1, request_tag_2"
          },
          {
            "name": "xProxy-User-ID",
            "in": "header",
            "description": "User ID",
            "schema": {
              "type": "string"
            },
            "example": "UserName123"
          },
          {
            "name": "xProxy-Experience-InstanceId",
            "in": "header",
            "description": "Experience Instance ID",
            "schema": {
              "type": "string"
            },
            "example": "experience_instance_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.Common.Models.ApiRouter.IngestRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PayI.Common.Models.ApiRouter.IngestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.IngestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ProxyApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ingest/bulk": {
      "post": {
        "tags": [
          "Ingest Requests"
        ],
        "summary": "Bulk Ingest",
        "operationId": "requests.BulkIngest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiRouter.BulkIngestRequest"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiRouter.BulkIngestRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.BulkIngestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.BulkIngestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/proxy/openai/v1/chat/completions": {
      "post": {
        "tags": [
          "OpenAI Requests"
        ],
        "summary": "Chat Completions",
        "operationId": "requests.OpenAI.ChatCompletionsAPIV1",
        "parameters": [
          {
            "name": "xProxy-Forward-Authorization",
            "in": "header",
            "description": "API Key or JWT to authorize with the downstream request API.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "xProxy-Budget-IDs",
            "in": "header",
            "description": "Comma separated list of budget ID strings",
            "schema": {
              "type": "string"
            },
            "example": "budgetId1, budgetId_2"
          },
          {
            "name": "xProxy-Request-Tags",
            "in": "header",
            "description": "Comma separated list of request tag strings",
            "schema": {
              "type": "string"
            },
            "example": "requestTag1, request_tag_2"
          },
          {
            "name": "xProxy-User-ID",
            "in": "header",
            "description": "User ID",
            "schema": {
              "type": "string"
            },
            "example": "UserName123"
          },
          {
            "name": "xProxy-Experience-InstanceId",
            "in": "header",
            "description": "Experience Instance ID",
            "schema": {
              "type": "string"
            },
            "example": "experience_instance_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiRouter.OpenAIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ProxyApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/proxy/openai/v1/embeddings": {
      "post": {
        "tags": [
          "OpenAI Requests"
        ],
        "summary": "Embeddings",
        "operationId": "requests.OpenAI.EmbeddingsAPIV1",
        "parameters": [
          {
            "name": "xProxy-Forward-Authorization",
            "in": "header",
            "description": "API Key or JWT to authorize with the downstream request API.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "xProxy-Budget-IDs",
            "in": "header",
            "description": "Comma separated list of budget ID strings",
            "schema": {
              "type": "string"
            },
            "example": "budgetId1, budgetId_2"
          },
          {
            "name": "xProxy-Request-Tags",
            "in": "header",
            "description": "Comma separated list of request tag strings",
            "schema": {
              "type": "string"
            },
            "example": "requestTag1, request_tag_2"
          },
          {
            "name": "xProxy-User-ID",
            "in": "header",
            "description": "User ID",
            "schema": {
              "type": "string"
            },
            "example": "UserName123"
          },
          {
            "name": "xProxy-Experience-InstanceId",
            "in": "header",
            "description": "Experience Instance ID",
            "schema": {
              "type": "string"
            },
            "example": "experience_instance_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiRouter.OpenAIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ProxyApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/proxy/openai/v1/images/generations": {
      "post": {
        "tags": [
          "OpenAI Requests"
        ],
        "summary": "Generations",
        "operationId": "requests.OpenAI.ImagesGenerationsAPIV1",
        "parameters": [
          {
            "name": "xProxy-Forward-Authorization",
            "in": "header",
            "description": "API Key or JWT to authorize with the downstream request API.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "xProxy-Budget-IDs",
            "in": "header",
            "description": "Comma separated list of budget ID strings",
            "schema": {
              "type": "string"
            },
            "example": "budgetId1, budgetId_2"
          },
          {
            "name": "xProxy-Request-Tags",
            "in": "header",
            "description": "Comma separated list of request tag strings",
            "schema": {
              "type": "string"
            },
            "example": "requestTag1, request_tag_2"
          },
          {
            "name": "xProxy-User-ID",
            "in": "header",
            "description": "User ID",
            "schema": {
              "type": "string"
            },
            "example": "UserName123"
          },
          {
            "name": "xProxy-Experience-InstanceId",
            "in": "header",
            "description": "Experience Instance ID",
            "schema": {
              "type": "string"
            },
            "example": "experience_instance_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ApiRouter.OpenAIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Common.Models.ProxyApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/{category}/resources/{resource}/{resource_id}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get a Resource's version details",
        "operationId": "getResource",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "Category",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "path",
            "description": "Resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource_id",
            "in": "path",
            "description": "Resource Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Calculator.Models.CategoryResourceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Resources"
        ],
        "summary": "Delete a version of the Resource",
        "operationId": "deleteResource",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "Category",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource",
            "in": "path",
            "description": "Resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource_id",
            "in": "path",
            "description": "Resource Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayI.Calculator.Models.CategoryResourceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ExperienceInstanceResponse": {
        "required": [
          "experience_instance_id",
          "request_id"
        ],
        "type": "object",
        "properties": {
          "request_id": {
            "minLength": 1,
            "type": "string"
          },
          "experience_instance_id": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ExperienceTypesResponse": {
        "required": [
          "description",
          "experience_type_id",
          "name",
          "request_id"
        ],
        "type": "object",
        "properties": {
          "request_id": {
            "minLength": 1,
            "type": "string"
          },
          "experience_type_id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PayI.BudgetManagement.Models.ApiQueries.PagedBudgetList": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayI.BudgetManagement.Models.Budget"
            },
            "nullable": true
          },
          "request_id": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayI.BudgetManagement.Models.Budget": {
        "required": [
          "base_cost_estimate",
          "budget_creation_timestamp",
          "budget_id",
          "budget_name",
          "budget_response_type",
          "budget_type",
          "budget_update_timestamp",
          "currency",
          "max",
          "totals"
        ],
        "type": "object",
        "properties": {
          "budget_id": {
            "type": "string"
          },
          "budget_name": {
            "minLength": 1,
            "type": "string"
          },
          "budget_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "max": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "$ref": "#/components/schemas/PayI.Common.Enums.Currency"
          },
          "budget_type": {
            "$ref": "#/components/schemas/PayI.Common.Data.BudgetManagement.Enums.BudgetType"
          },
          "base_cost_estimate": {
            "$ref": "#/components/schemas/PayI.Common.Data.BudgetManagement.Enums.BaseCostEstimate"
          },
          "budget_response_type": {
            "$ref": "#/components/schemas/PayI.Common.Data.BudgetManagement.Enums.BudgetResponseType"
          },
          "budget_creation_timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "totals": {
            "$ref": "#/components/schemas/PayI.BudgetManagement.Models.TotalCostData"
          },
          "budget_update_timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PayI.BudgetManagement.Models.BudgetHistory": {
        "required": [
          "budget_name"
        ],
        "type": "object",
        "properties": {
          "budget_id": {
            "type": "string"
          },
          "budget_name": {
            "type": "string",
            "nullable": true
          },
          "budget_reset_timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "budget_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "budget_type": {
            "$ref": "#/components/schemas/PayI.Common.Data.BudgetManagement.Enums.BudgetType"
          },
          "base_cost_estimate": {
            "$ref": "#/components/schemas/PayI.Common.Data.BudgetManagement.Enums.BaseCostEstimate"
          },
          "budget_response_type": {
            "$ref": "#/components/schemas/PayI.Common.Data.BudgetManagement.Enums.BudgetResponseType"
          },
          "max": {
            "type": "number",
            "format": "double"
          },
          "totals": {
            "$ref": "#/components/schemas/PayI.BudgetManagement.Models.TotalCostData"
          }
        },
        "additionalProperties": false
      },
      "PayI.BudgetManagement.Models.BudgetHistoryResponse": {
        "required": [
          "budget_history",
          "request_id"
        ],
        "type": "object",
        "properties": {
          "request_id": {
            "minLength": 1,
            "type": "string"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "budget_history": {
            "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetHistory"
          }
        },
        "additionalProperties": false
      },
      "PayI.BudgetManagement.Models.BudgetResponse": {
        "required": [
          "budget",
          "request_id"
        ],
        "type": "object",
        "properties": {
          "request_id": {
            "minLength": 1,
            "type": "string"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "budget": {
            "$ref": "#/components/schemas/PayI.BudgetManagement.Models.Budget"
          }
        },
        "additionalProperties": false
      },
      "PayI.BudgetManagement.Models.BudgetTags": {
        "required": [
          "budget_tags"
        ],
        "type": "object",
        "properties": {
          "budget_tags": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "tag1",
              "tag2"
            ]
          }
        },
        "additionalProperties": false
      },
      "PayI.BudgetManagement.Models.BudgetTagsResponse": {
        "type": "object",
        "properties": {
          "tag_id": {
            "type": "integer",
            "format": "int64"
          },
          "tag_name": {
            "type": "string",
            "nullable": true
          },
          "created_on": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PayI.BudgetManagement.Models.BudgetTransactionData": {
        "required": [
          "blocked",
          "blocked_external",
          "exceeded",
          "successful"
        ],
        "type": "object",
        "properties": {
          "successful": {
            "type": "integer",
            "format": "int32"
          },
          "blocked": {
            "type": "integer",
            "format": "int32"
          },
          "blocked_external": {
            "type": "integer",
            "format": "int32"
          },
          "exceeded": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PayI.BudgetManagement.Models.CostData": {
        "required": [
          "input",
          "output",
          "total"
        ],
        "type": "object",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/PayI.Common.Models.BudgetManagement.CostDetails"
          },
          "output": {
            "$ref": "#/components/schemas/PayI.Common.Models.BudgetManagement.CostDetails"
          },
          "total": {
            "$ref": "#/components/schemas/PayI.Common.Models.BudgetManagement.CostDetails"
          }
        },
        "additionalProperties": false
      },
      "PayI.BudgetManagement.Models.CreateBudget": {
        "required": [
          "budget_name",
          "max"
        ],
        "type": "object",
        "properties": {
          "budget_name": {
            "minLength": 1,
            "type": "string"
          },
          "budget_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "example": [
              "tag1",
              "tag2"
            ]
          },
          "max": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "number",
            "format": "double"
          },
          "currency": {
            "$ref": "#/components/schemas/PayI.Common.Enums.Currency"
          },
          "budget_type": {
            "$ref": "#/components/schemas/PayI.Common.Data.BudgetManagement.Enums.BudgetType"
          },
          "base_cost_estimate": {
            "$ref": "#/components/schemas/PayI.Common.Data.BudgetManagement.Enums.BaseCostEstimate"
          },
          "budget_response_type": {
            "$ref": "#/components/schemas/PayI.Common.Data.BudgetManagement.Enums.BudgetResponseType"
          },
          "billing_model_id": {
            "type": "string",
            "nullable": true
          },
          "cost_basis": {
            "$ref": "#/components/schemas/PayI.Common.Data.BudgetManagement.Enums.CostBasis"
          }
        },
        "additionalProperties": false
      },
      "PayI.BudgetManagement.Models.DefaultResponse": {
        "required": [
          "request_id"
        ],
        "type": "object",
        "properties": {
          "request_id": {
            "minLength": 1,
            "type": "string"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayI.BudgetManagement.Models.RequestsData": {
        "required": [
          "blocked",
          "error",
          "successful"
        ],
        "type": "object",
        "properties": {
          "successful": {
            "type": "integer",
            "format": "int32"
          },
          "blocked": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PayI.BudgetManagement.Models.TotalCostData": {
        "required": [
          "cost",
          "requests"
        ],
        "type": "object",
        "properties": {
          "cost": {
            "$ref": "#/components/schemas/PayI.BudgetManagement.Models.CostData"
          },
          "requests": {
            "$ref": "#/components/schemas/PayI.BudgetManagement.Models.RequestsData"
          },
          "budget_transactions": {
            "$ref": "#/components/schemas/PayI.BudgetManagement.Models.BudgetTransactionData"
          }
        },
        "additionalProperties": false
      },
      "PayI.BudgetManagement.Models.UpdateBudget": {
        "type": "object",
        "properties": {
          "budget_name": {
            "type": "string",
            "nullable": true
          },
          "max": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayI.Calculator.Models.CategoryResourceRequest": {
        "type": "object",
        "properties": {
          "input_price": {
            "type": "number",
            "format": "double"
          },
          "output_price": {
            "type": "number",
            "format": "double"
          },
          "max_input_units": {
            "type": "integer",
            "format": "int32"
          },
          "max_output_units": {
            "type": "integer",
            "format": "int32"
          },
          "start_timestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayI.Calculator.Models.CategoryResourceResponse": {
        "required": [
          "category",
          "resource",
          "resource_id",
          "start_timestamp"
        ],
        "type": "object",
        "properties": {
          "input_price": {
            "type": "number",
            "format": "double"
          },
          "output_price": {
            "type": "number",
            "format": "double"
          },
          "max_input_units": {
            "type": "integer",
            "format": "int32"
          },
          "max_output_units": {
            "type": "integer",
            "format": "int32"
          },
          "resource_id": {
            "minLength": 1,
            "type": "string"
          },
          "start_timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "category": {
            "minLength": 1,
            "type": "string"
          },
          "resource": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PayI.Calculator.Models.CategoryResponse": {
        "required": [
          "category",
          "resource_count",
          "start_timestamp"
        ],
        "type": "object",
        "properties": {
          "category": {
            "minLength": 1,
            "type": "string"
          },
          "resource_count": {
            "type": "integer",
            "format": "int32"
          },
          "start_timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PayI.Calculator.Models.ExperienceTypeRequest": {
        "required": [
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PayI.Calculator.Models.UpdateExperienceTypeRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayI.Common.Data.BudgetManagement.Enums.BaseCostEstimate": {
        "enum": [
          "max"
        ],
        "type": "string"
      },
      "PayI.Common.Data.BudgetManagement.Enums.BudgetResponseType": {
        "enum": [
          "block",
          "allow"
        ],
        "type": "string"
      },
      "PayI.Common.Data.BudgetManagement.Enums.BudgetStatus": {
        "enum": [
          "ok",
          "blocked",
          "blocked_external",
          "exceeded",
          "failed"
        ],
        "type": "string"
      },
      "PayI.Common.Data.BudgetManagement.Enums.BudgetType": {
        "enum": [
          "conservative",
          "liberal"
        ],
        "type": "string"
      },
      "PayI.Common.Data.BudgetManagement.Enums.CostBasis": {
        "enum": [
          "base",
          "billed"
        ],
        "type": "string"
      },
      "PayI.Common.Enums.Currency": {
        "enum": [
          "usd"
        ],
        "type": "string"
      },
      "PayI.Common.Models.ApiError": {
        "required": [
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "message": {
            "minLength": 1,
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "xproxy_error": {
            "$ref": "#/components/schemas/PayI.Common.Models.ProxyError"
          }
        },
        "additionalProperties": false
      },
      "PayI.Common.Models.ApiRouter.AnthropicResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "proxy_result": {
            "$ref": "#/components/schemas/PayI.Common.Models.ProxyResult.SuccessfulProxyResult"
          }
        },
        "additionalProperties": false
      },
      "PayI.Common.Models.ApiRouter.BulkIngestRequest": {
        "required": [
          "category",
          "input",
          "output",
          "resource"
        ],
        "type": "object",
        "properties": {
          "category": {
            "minLength": 1,
            "type": "string"
          },
          "resource": {
            "minLength": 1,
            "type": "string"
          },
          "input": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "output": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "event_timestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "budget_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "request_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "experience_instance_id": {
            "type": "string",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayI.Common.Models.ApiRouter.IngestRequest": {
        "required": [
          "category",
          "input",
          "output",
          "resource"
        ],
        "type": "object",
        "properties": {
          "category": {
            "minLength": 1,
            "type": "string"
          },
          "resource": {
            "minLength": 1,
            "type": "string"
          },
          "input": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "output": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "event_timestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayI.Common.Models.ApiRouter.OpenAIResponse": {
        "type": "object",
        "properties": {
          "created": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "proxy_result": {
            "$ref": "#/components/schemas/PayI.Common.Models.ProxyResult.SuccessfulProxyResult"
          }
        },
        "additionalProperties": false
      },
      "PayI.Common.Models.BudgetManagement.CostDetails": {
        "required": [
          "base"
        ],
        "type": "object",
        "properties": {
          "base": {
            "type": "number",
            "format": "double"
          },
          "overrun_base": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayI.Common.Models.BulkIngestResponse": {
        "required": [
          "ingest_count",
          "ingest_timestamp",
          "request_id"
        ],
        "type": "object",
        "properties": {
          "request_id": {
            "minLength": 1,
            "type": "string"
          },
          "ingest_timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "ingest_count": {
            "type": "integer",
            "format": "int32"
          },
          "error_count": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayI.Common.Models.IndexApiError"
            },
            "nullable": true
          },
          "total_count": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PayI.Common.Models.IndexApiError": {
        "type": "object",
        "properties": {
          "item_index": {
            "type": "integer",
            "format": "int32"
          },
          "xproxy_result": {
            "$ref": "#/components/schemas/PayI.Common.Models.ApiError"
          }
        },
        "additionalProperties": false
      },
      "PayI.Common.Models.IngestResponse": {
        "required": [
          "event_timestamp",
          "ingest_timestamp",
          "request_id",
          "xproxy_result"
        ],
        "type": "object",
        "properties": {
          "request_id": {
            "minLength": 1,
            "type": "string"
          },
          "ingest_timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "event_timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "xproxy_result": {
            "$ref": "#/components/schemas/PayI.Common.Models.ProxyResult.SuccessfulProxyResult"
          }
        },
        "additionalProperties": false
      },
      "PayI.Common.Models.ProxyApiError": {
        "required": [
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "message": {
            "minLength": 1,
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "xproxy_error": {
            "$ref": "#/components/schemas/PayI.Common.Models.ProxyError"
          },
          "xproxy_result": {
            "$ref": "#/components/schemas/PayI.Common.Models.ProxyResult.FailedProxyResult"
          }
        },
        "additionalProperties": false
      },
      "PayI.Common.Models.ProxyError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayI.Common.Models.ProxyResult.FailedProxyResult": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "nullable": true
          },
          "request_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "budgets": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PayI.Common.Models.ProxyResult.ProxyBudgetStatus"
            },
            "nullable": true
          },
          "blocked_budget_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PayI.Common.Models.ProxyResult.ProxyBudgetStatus": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/PayI.Common.Data.BudgetManagement.Enums.BudgetStatus"
          }
        },
        "additionalProperties": false
      },
      "PayI.Common.Models.ProxyResult.RequestCost": {
        "type": "object",
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/PayI.Common.Enums.Currency"
          },
          "input": {
            "$ref": "#/components/schemas/PayI.Common.Models.BudgetManagement.CostDetails"
          },
          "output": {
            "$ref": "#/components/schemas/PayI.Common.Models.BudgetManagement.CostDetails"
          },
          "total": {
            "$ref": "#/components/schemas/PayI.Common.Models.BudgetManagement.CostDetails"
          }
        },
        "additionalProperties": false
      },
      "PayI.Common.Models.ProxyResult.SuccessfulProxyResult": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "nullable": true
          },
          "request_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "budgets": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PayI.Common.Models.ProxyResult.ProxyBudgetStatus"
            },
            "nullable": true
          },
          "cost": {
            "$ref": "#/components/schemas/PayI.Common.Models.ProxyResult.RequestCost"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Pay_I_API_Key": {
        "type": "apiKey",
        "description": "Pay-I API Key. Example: \"{apikey}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Pay_I_API_Key": []
    }
  ],
  "tags": [
    {
      "name": "OpenAI Requests",
      "description": "OpenAI Requests"
    },
    {
      "name": "Azure OpenAI Requests",
      "description": "Azure OpenAI Requests"
    },
    {
      "name": "Anthropic Requests",
      "description": "Anthropic Requests"
    },
    {
      "name": "Budgets",
      "description": "Budgets"
    },
    {
      "name": "Budget Tags",
      "description": "Budget Tags"
    },
    {
      "name": "Ingest Requests",
      "description": "Ingest Requests"
    },
    {
      "name": "Categories",
      "description": "System and Custom Categories"
    },
    {
      "name": "Resources",
      "description": "Resources"
    },
    {
      "name": "Experiences",
      "description": "Experiences"
    }
  ],
  "servers": [
    {
      "url": "https://api.pay-i.com"
    }
  ]
}
